# 事件委托

## [好文章](https://www.cnblogs.com/threepigs/articles/10637656.html)

## 两个应用场景

## 场景一

> 我们需要给 100 个按钮添加点击事件，怎么办？

答：

> 监听这 100 个按钮的 `祖先`（上层的） 元素，等冒泡的时候判断 `target` 是这 100 个的按钮中的哪一个，并作出相应的业务逻辑

## 场景二

> 我们需要给目前DOM页面内还不存在（之后动态添加的）元素，添加事件，怎么办？

答：

> 还是监听 `祖先` 元素，等点击时，再来判断当前的操作的元素是否为我们想要监听的元素即可

## 本质

事件委托是利用事件的冒泡原理来实现的，何为事件冒泡呢？就是事件从最深的节点开始，然后逐步向上传播事件，

事件委托：委托父级执行事件

## 优点

* 节省内存占用，由于不需要每个元素都单独添加事件，只需添加一次即可；

* 可以监听动态元素，由于添加的事件是在 `祖先` 元素上，而不是该元素本身，所以与它是否存在无关。
* JavaScript和DOM节点之间的关联变少了，这样也就减少了因循环引用而带来的内存泄漏发生的概率。